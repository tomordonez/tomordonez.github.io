I"l<p>Follow this process to create a CSV file from Linkedin sent invites.</p>

<p><img src="{{ site.baseurl }}/assets/images/create-csv-from-linkedin-sent-invites.jpg" alt="Create a CSV file from Linkedin Sent Invites" /></p>

<h2 id="objective">Objective</h2>

<ol>
  <li>Connect with People</li>
  <li>Get a list of sent invitations</li>
  <li>Automate “view profile” on browser</li>
</ol>

<h2 id="1-connect-with-people">1. Connect with People</h2>

<p>Invite as Friend</p>

<h2 id="2-get-a-list-of-sent-invitations">2. Get a list of sent invitations</h2>

<p>Go here: https://www.linkedin.com/people/invites?trk=tab_inv</p>

<p>Scroll down the infinite scroll until the bottom.</p>

<p>Inspect HTML and copy element <code class="language-plaintext highlighter-rouge">&lt;ul class="list-container invites"&gt;</code></p>

<h2 id="create-a-csv-list">Create a CSV list</h2>

<p>Paste code into Sublime.</p>

<p>Go back to LI and get the name of the first person on top of the list and the last person on the bottom of the list.</p>

<p>Go to Sublime and search for these names to make sure you got all the HTML code.</p>

<p>Find:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(&lt;div class="entityblock"&gt;)
</code></pre></div></div>

<p>Replace with:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>\n$1
</code></pre></div></div>

<p>Find:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>,
</code></pre></div></div>

<p>Replace with:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>;
</code></pre></div></div>

<p>Remove the first row that starts with <code class="language-plaintext highlighter-rouge">&lt;ul class="list-container invites"&gt;</code></p>

<p>Find:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>^.*value="
</code></pre></div></div>

<p>Replace with:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>empty
</code></pre></div></div>

<p>Find:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>" id="checkbox.*?a href="
</code></pre></div></div>

<p>Replace with:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>,
</code></pre></div></div>

<p>Find:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;amp;.*&lt;span&gt;
</code></pre></div></div>

<p>(pending to review if this is <code class="language-plaintext highlighter-rouge">&amp;amp;</code> or <code class="language-plaintext highlighter-rouge">&amp;</code>)</p>

<p>Replace with:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>,
</code></pre></div></div>

<p>Find:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;/span.*subheader"&gt;
</code></pre></div></div>

<p>Replace with:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>,
</code></pre></div></div>

<p>Find:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;/p&gt;.*
</code></pre></div></div>

<p>Replace with:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>empty
</code></pre></div></div>

<p>A CSV list is born</p>

<h2 id="3-automate-view-profiles-on-browser">3. Automate “view profiles” on browser</h2>

<p>This part is going to be a little manual.</p>

<p>If you want to prioritize some invites then you need to add the date of the invite in the CSV.</p>

<p>Go back to LI sent invites and get the invite dates. Add them manually to your CSV (in Excel).</p>

<p>You can convert your CSV into XLS if you want.</p>

<p>You could also segment your list by priorities.</p>

<h2 id="automating-view-profiles-with-bash">Automating View Profiles with Bash</h2>

<p>Note: This requires some coding skills.</p>

<p>This process is only half automated and requires some manual work. Perhaps 30min daily.</p>

<p>With LI logged in. The process is to open each URL on the browser and then close them.</p>

<p>With bash you can automate opening each URL but you have to close them manually.</p>

<p>The number of tabs that you can open in Chrome depends on your RAM. If you have 16GB of RAM you could have up to 80 tabs opened.</p>

<p>Perhaps you can have lists of 20 URLs for each file and run the script in batches.</p>

<p>The script should be something simple like:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/usr/local/bin/bash
while read -r line
do
  open "$line"
  sleep 10
done &lt; "$1"
</code></pre></div></div>

<p>When you create a text file such as <code class="language-plaintext highlighter-rouge">input.txt</code> and add say…20 URLs to the file. Then 
you can run the script like this:</p>

<p>Save and name the script with whatever name you want but ending in <code class="language-plaintext highlighter-rouge">.sh</code></p>

<p>Such as: <code class="language-plaintext highlighter-rouge">awesome-file.sh</code></p>

<p>Now enable the file to be executable.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ chmod +x awesome-file.sh
</code></pre></div></div>

<p>Now you can execute the file like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ./awesome-file.sh input.txt
</code></pre></div></div>

<p>This will open the URLs on the browser. Once they load, you need to manually close them.</p>

<h2 id="automating-view-profiles-with-python">Automating View Profiles with Python</h2>

<p>The problem with the Bash script is that you have to manually close the profiles.</p>

<p>If you want to automate opening and closing you need to use Python and Selenium.</p>

<p>You need to install Selenium:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ pip install selenium
</code></pre></div></div>

<p>You need to install ChromeDriver from <a href="https://sites.google.com/a/chromium.org/chromedriver/downloads" target="_blank">here</a>.</p>

<p>This downloads a zip file. Unzip. Take a note of where this is installed. You will need this location below.</p>

<p><strong>Note: This script is incomplete</strong></p>

<p>This Python script opens and closes the profiles but it’s missing Linkedin authentication…to be continued.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import os
import time
from selenium import webdriver

chromedriver = "Path to where you downloaded the Chromedriver"
os.environ["webdriver.chrome.driver"] = chromedriver
dr = webdriver.Chrome(chromedriver)

dr.get('URL of profile here')
dr.execute_script("$(window.open('URL of next profile here'))")

time.sleep(10)
dr.close()
dr.switch_to.window(dr.window_handles[-1])
dr.close()
</code></pre></div></div>

<h2 id="if-you-have-questions-or-comments-please-add-them-below">If you have questions or comments please add them below</h2>

<p><img src="{{ site.baseurl }}/assets/images/tomordonez-ask-question-comment.gif" alt="Ask Question or Comment" />
r comments please add them below</p>

<p><img src="{{ site.baseurl }}/assets/images/tomordonez-ask-question-comment.gif" alt="Ask Question or Comment" /></p>
:ET