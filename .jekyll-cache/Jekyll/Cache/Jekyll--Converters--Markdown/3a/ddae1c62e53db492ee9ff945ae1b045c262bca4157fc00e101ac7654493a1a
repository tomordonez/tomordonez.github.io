I"ö<p>Add a title and labels to a bar chart in D3.</p>

<h2 id="d3-bar-chart-title">D3 Bar Chart Title</h2>

<p>Use <code class="language-plaintext highlighter-rouge">append("text")</code> to append a title to the graph:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>svg.append("text")
   .attr("x", w/2)
   .attr("y", padding)
   .attr("text-anchor", "middle")
   .style("font-size", "16px")
   .text("Awesome Barchart");
</code></pre></div></div>

<p>Follow:</p>

<ul>
  <li><a href="../d3-creating-a-bar-chart/">D3 Creating a Bar Chart</a></li>
  <li><a href="../d3-scales-in-a-bar-chart/">D3 Scales in a Bar Chart</a></li>
</ul>

<h2 id="add-a-label-for-the-x-axis">Add a label for the x Axis</h2>

<p>A label can be added to the x Axis by appending a <code class="language-plaintext highlighter-rouge">text</code> and using the <code class="language-plaintext highlighter-rouge">transform</code> and <code class="language-plaintext highlighter-rouge">translate</code> to position the text.</p>

<p>The function <code class="language-plaintext highlighter-rouge">translate</code> uses a string concatenation to get to <code class="language-plaintext highlighter-rouge">translate(w/2, h-10)</code> which is calculated to <code class="language-plaintext highlighter-rouge">translate(500/2, 300-10)</code> or <code class="language-plaintext highlighter-rouge">translate(250, 290)</code>. Where <code class="language-plaintext highlighter-rouge">x</code> is in the middle of the SVG and <code class="language-plaintext highlighter-rouge">y</code> is <code class="language-plaintext highlighter-rouge">10px</code> from the bottom (or <code class="language-plaintext highlighter-rouge">290px</code> from the top).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>svg.append("text")
   .attr("transform", "translate(" + (w/2) + " ," + (h-10) + ")")
   .style("text-anchor", "middle")
   .text("Year");
</code></pre></div></div>

<h2 id="add-a-label-for-the-y-axis">Add a label for the y Axis</h2>

<p>The label for the y Axis is a bit different. First we need to rotate the label vertically with a negative <code class="language-plaintext highlighter-rouge">-90</code> degrees. Then the point of reference for <code class="language-plaintext highlighter-rouge">(0,0)</code> changes. If I am not mistaken itâ€™s now on the top right relative to the rotated text.</p>

<p>To center the text vertically. Move it half way to the left at an <code class="language-plaintext highlighter-rouge">x</code> distance of <code class="language-plaintext highlighter-rouge">-(h/2)</code>. The <code class="language-plaintext highlighter-rouge">y</code> is set relative to the rotated position. If you move it down (to the right) it will be a positive number (towards the y Axis). If you move it up (to the left) it will be a negative number (away from the y Axis).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>svg.append("text")
   .attr("transform", "rotate(-90)")
   .attr("x", -(h/2))
   .attr("y", 15)
   .style("text-anchor", "middle")
   .text("Population");
</code></pre></div></div>

<p>The barchart looks like this:</p>

<p><img src="{{ site.baseurl }}/assets/images/d3-rect5.jpg" alt="D3 barchart with Axes and Labels" /></p>

<details>
    <summary>Click to see updated code</summary>
    <pre>
        
    var w = 500;
    var h = 300;
    var barPadding = 3;
    var padding = 40;
    var svg = d3.select("#d3-barchart-vis")
                .append("svg")
                .attr("preserveAspectRatio", "xMinYMin meet")
                .attr("viewBox", "0 0 " + w + " " + h);

    var parseTime = d3.timeParse("%Y");

    var rowConverter = function(d) {
        return {
            year: parseTime(d.year),
            population: +d.population
        }
    }

    d3.csv("file.csv", rowConverter).then(function(dataset) {

        xScale = d3.scaleBand()
                   .domain(d3.range(dataset.length))
                   .rangeRound([padding, w])
                   .paddingInner(0.1)
                   .paddingOuter(0.1);

        yScale = d3.scaleLinear()
                   .domain([0, d3.max(dataset, function(d) { return d.population; })])
                   .range([h - padding, padding]);

        var xAxis = d3.axisBottom(xScale);
        var yAxis = d3.axisLeft(yScale);

        svg.selectAll("rect")
           .data(dataset)
           .enter()
           .append("rect")
           .attr("x", function(d, i) {
               return xScale(i);
           })
           .attr("y", d =&gt; yScale(d.population))
           .attr("width", xScale.bandwidth())
           .attr("height", d =&gt; h - padding - yScale(d.population))
           .attr("fill", "teal");

        // Add the x Axis
        svg.append("g")
           .attr("class", "x axis")
           .attr("transform", "translate(0," + (h - padding) + ")")
           .call(xAxis);

        // Label for x Axis
        svg.append("text")
           .attr("transform", "translate(" + (w/2) + " ," + (h-10) + ")")
           .style("text-anchor", "middle")
           .text("Year");

        // Add the y Axis
        svg.append("g")
           .attr("class", "y axis")
           .attr("transform", "translate(" + padding + ",0)")
           .call(yAxis);

        // Label for y Axis
        svg.append("text")
           .attr("transform", "rotate(-90)")
           .attr("x", -(h/2))
           .attr("y", 15)
           .style("text-anchor", "middle")
           .text("Population");

        svg.append("text")
           .attr("x", w/2)
           .attr("y", padding)
           .attr("text-anchor", "middle")
           .style("font-size", "16px")
           .text("Awesome Barchart");
    });
    </pre>

</details>
:ET