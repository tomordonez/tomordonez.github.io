I"<p>In D3 convert a string to date format after loading a CSV file.</p>

<p>When loading a <code class="language-plaintext highlighter-rouge">CSV</code> file in D3, the data is parsed as strings. <a href="../d3-load-a-csv-file-with-promises/">D3 Load a CSV file with Promises</a></p>

<p>If this is the data contained in the CSV:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>year,population
1950,5
1951,10
1955,15
1959,20
</code></pre></div></div>

<p>It will parse the years as strings and the population as strings. You need to convert these strings to the correct type in D3.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">year</code>: From <code class="language-plaintext highlighter-rouge">string</code> to <code class="language-plaintext highlighter-rouge">date</code> format.</li>
  <li><code class="language-plaintext highlighter-rouge">population</code>: From <code class="language-plaintext highlighter-rouge">string</code> to <code class="language-plaintext highlighter-rouge">integer</code> format.</li>
</ul>

<h2 id="convert-string-to-date-in-d3">Convert string to date in D3</h2>

<p>You can use this syntax and see the resources for more details:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var parseTime = d3.timeParse("%Y");
var formatTime = d3.timeFormat(specifier);
</code></pre></div></div>

<p>More details here:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">%Y</code>: Parse year in decimal number such as <code class="language-plaintext highlighter-rouge">2020</code>.</li>
  <li><code class="language-plaintext highlighter-rouge">specifier</code>: More details <a href="https://github.com/d3/d3-time-format/blob/v2.2.3/README.md#locale_format">here</a></li>
  <li><a href="https://github.com/d3/d3-time-format/blob/v2.2.3/README.md#timeParse">d3.timeParse</a></li>
  <li><a href="https://github.com/d3/d3-time-format/blob/v2.2.3/README.md#timeFormat">d3.timeFormat</a></li>
</ul>

<p>Add this code to a <code class="language-plaintext highlighter-rouge">project.js</code> file. See <a href="../setup-d3-step-by-step/">Setup D3 Step by Step</a>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var parseTime = d3.timeParse("%Y");
</code></pre></div></div>

<p>Pass a function as a parameter when loading the <code class="language-plaintext highlighter-rouge">CSV</code>. First we need to create the function.</p>

<h2 id="a-function-to-parse-every-row-of-the-csv-file">A function to parse every row of the CSV file</h2>

<p>This function is passed as a parameter of the <code class="language-plaintext highlighter-rouge">d3.csv</code> method. It takes every row as <code class="language-plaintext highlighter-rouge">d</code>. It parses the <code class="language-plaintext highlighter-rouge">year</code> from <code class="language-plaintext highlighter-rouge">parseTime(d.year)</code> and for <code class="language-plaintext highlighter-rouge">population</code>, it uses the <code class="language-plaintext highlighter-rouge">+</code> operator to force the string to numbers on <code class="language-plaintext highlighter-rouge">+d.population</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var parseTime = d3.timeParse("%Y");

var rowConverter = function(d) {
    return {
        year: parseTime(d.year),
        population: +d.population
    };
}
</code></pre></div></div>

<p>Clear the console and reload the browser. See if there are any errors in the console or in the Python server.</p>

<h2 id="loading-a-csv-file-with-rowconverter">Loading a CSV file with rowConverter</h2>

<p>Load the <code class="language-plaintext highlighter-rouge">csv</code> file and use <code class="language-plaintext highlighter-rouge">rowConverter</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>d3.csv("file.csv", rowConverter).then(function(dataset) {
    console.log(dataset);
});
</code></pre></div></div>

<p>Add this to <code class="language-plaintext highlighter-rouge">project.js</code> and reload the browser:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var parseTime = d3.timeParse("%Y");

var rowConverter = function(d) {
    return {
        year: parseTime(d.year),
        population: +d.population
    };
}

d3.csv("file.csv", rowConverter).then(function(dataset) {
    console.log(dataset);
});
</code></pre></div></div>

<p>This is what the code does:</p>

<ul>
  <li>It opens <code class="language-plaintext highlighter-rouge">file.csv</code> and passes the function <code class="language-plaintext highlighter-rouge">rowConverter</code> as a parameter.</li>
  <li>It takes every row using the variable <code class="language-plaintext highlighter-rouge">d</code> of <code class="language-plaintext highlighter-rouge">file.csv</code>.</li>
  <li>Parses the <code class="language-plaintext highlighter-rouge">year</code> from a <code class="language-plaintext highlighter-rouge">string</code> to a <code class="language-plaintext highlighter-rouge">parseTime(d.year)</code> format.</li>
  <li>Parses the <code class="language-plaintext highlighter-rouge">population</code> from a <code class="language-plaintext highlighter-rouge">string</code> to an integer using the <code class="language-plaintext highlighter-rouge">+</code> operator <code class="language-plaintext highlighter-rouge">+d.population</code>.</li>
  <li>Then print the values in the console.</li>
</ul>

<p>The console shows:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(4) [{…}, {…}, {…}, {…}, columns: Array(2)]
    0: {year: Sun Jan 01 1950 00:00:00 GMT-0500 (Eastern Standard Time), population: 5}
    1: {year: Mon Jan 01 1951 00:00:00 GMT-0500 (Eastern Standard Time), population: 10}
    2: {year: Sat Jan 01 1955 00:00:00 GMT-0500 (Eastern Standard Time), population: 15}
    3: {year: Thu Jan 01 1959 00:00:00 GMT-0500 (Eastern Standard Time), population: 20}
    columns: (2) ["year", "population"]
    length: 4
    __proto__: Array(0)
</code></pre></div></div>

<p>Next: <a href="../d3-bind-data-to-dom/">D3 Bind data to DOM</a></p>
:ET