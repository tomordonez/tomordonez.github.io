I"y<p>This is how to setup a crontab with Selenium and Chrome Driver</p>

<p>If you are here I assume you have some knowledge of <code class="language-plaintext highlighter-rouge">cron</code>. Otherwise read this <a href="https://www.tomordonez.com/automating-tasks-crontab.html">cronjob tutorial</a>.</p>

<p>Let’s pretend that we have a Python script in this directory:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/Documents/scripts/awesome.py
</code></pre></div></div>

<h2 id="just-for-reference-you-should-use-this-for-troubleshooting-purposes">Just for reference. You should use this for troubleshooting purposes:</h2>

<p>Review the system log file here: <code class="language-plaintext highlighter-rouge">/var/log/syslog</code></p>

<p>Send the stderr and stdout to a file like this. Right after the last crontab command:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; awesome.log 2&gt;&amp;1
</code></pre></div></div>

<p>Read more about the redirection syntax <a href="http://tldp.org/LDP/abs/html/io-redirection.html" target="_blank">here</a>.</p>

<h2 id="edit-your-crontab">Edit your crontab</h2>

<p>Edit your crontab with <code class="language-plaintext highlighter-rouge">crontab -e</code></p>

<p>In this example you run a job every day at 7:45am.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>45 7 * * * export DISPLAY=:0 &amp;&amp; cd /home/your-username/Documents/scripts/ &amp;&amp; /usr/bin/python awesome.py &gt; awesome.log 2&gt;&amp;1
</code></pre></div></div>

<p>To learn what <code class="language-plaintext highlighter-rouge">45 7 * * *</code> means. Go to this tutorial about <a href="https://www.tomordonez.com/automating-tasks-crontab.html">automating tasks with crontab</a>.</p>

<p>Since <code class="language-plaintext highlighter-rouge">cron</code> runs with a limited number of environment variables. You need to set the <code class="language-plaintext highlighter-rouge">DISPLAY</code> variable.</p>

<p><a href="http://askubuntu.com/questions/432255/what-is-display-environment-variable" target="_blank">This</a> explains more about the <code class="language-plaintext highlighter-rouge">DISPLAY</code> variable.</p>

<p><code class="language-plaintext highlighter-rouge">DISPLAY</code> consists of a keyboard, a mouse and a screen. The display is managed by the <code class="language-plaintext highlighter-rouge">X server</code>.</p>

<p>If I want to open Sublime in Linux. X server is the framework that helps me display the program into a window. If I move the mouse then it helps me go to an exact pixel in the screen.</p>

<p>Lookup more details on Wikipedia as <code class="language-plaintext highlighter-rouge">X Window System</code>.</p>

<p>“The X server receives input from the keyboard and mouse and displays to a screen. A web browser and a terminal run on the user’s workstation.”</p>

<p>If you do this on your terminal:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>echo $DISPLAY
</code></pre></div></div>

<p>Most likely you will get:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>:0
</code></pre></div></div>

<p>Which means that <code class="language-plaintext highlighter-rouge">DISPLAY</code> variable is set to <code class="language-plaintext highlighter-rouge">:0</code>.</p>

<p>If you do this on your terminal:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>env | grep 'DISPLAY'
</code></pre></div></div>

<p>You will get:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DISPLAY:=0
</code></pre></div></div>

<p>Other examples of DISPLAY could be:</p>

<ul>
  <li>DISPLAY=localhost:4</li>
  <li>DISPLAY=google.com:0</li>
</ul>

<p>The syntax for <code class="language-plaintext highlighter-rouge">DISPLAY</code> is <code class="language-plaintext highlighter-rouge">hostname:D.S</code> which means screen <code class="language-plaintext highlighter-rouge">S</code> on display <code class="language-plaintext highlighter-rouge">D</code> of host <code class="language-plaintext highlighter-rouge">hostname</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hostname:D.S
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">hostname</code> is the computer name where the X server is running. If there is no hostname then it means the <code class="language-plaintext highlighter-rouge">localhost</code>.</li>
  <li><code class="language-plaintext highlighter-rouge">D</code> is a sequence number. Usually 0. It can be different if the computer has many displays connected.</li>
  <li><code class="language-plaintext highlighter-rouge">S</code> is the screen number. 0 is the default.</li>
</ul>

<p>When you <code class="language-plaintext highlighter-rouge">echo $DISPLAY</code>. The hostname is omitted and it shows only the default <code class="language-plaintext highlighter-rouge">DISPLAY</code> number: <code class="language-plaintext highlighter-rouge">:0</code>.</p>

<h2 id="crontab-and-display">Crontab and DISPLAY</h2>

<p>Selenium opens the browser if you are using the Chromedriver.</p>

<p>Cron doesn’t have the <code class="language-plaintext highlighter-rouge">DISPLAY</code> environment variable set.</p>

<p>You need to set the <code class="language-plaintext highlighter-rouge">DISPLAY</code> variable inside the crontab such as:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export DISPLAY=:0
</code></pre></div></div>

<p>Going back the example where you run a job every day at 7:45am.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>45 7 * * * export DISPLAY=:0 &amp;&amp; cd /home/your-username/Documents/scripts/ &amp;&amp; /usr/bin/python awesome.py &gt; awesome.log 2&gt;&amp;1
</code></pre></div></div>

<p>You are setting the <code class="language-plaintext highlighter-rouge">DISPLAY</code> variable before executing any command.</p>

<p>You are using the full path to where the files are.</p>

<p>And you are sending stdout and stderr to a log file for troubleshooting.</p>
:ET