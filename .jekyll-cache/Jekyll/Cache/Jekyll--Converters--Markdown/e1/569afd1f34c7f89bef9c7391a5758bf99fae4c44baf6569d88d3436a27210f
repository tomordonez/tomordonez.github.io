I"ê<p>Google has a cornucopia of data services. Someone said I should have more powerful words in my vocabulary, so there you go Grammarly. I yet have to find a way to use ‚Äúrubric‚Äù in a sentence. I prefer the term Rubik as in Rubik‚Äôs cube. Google API is a Rubik‚Äôs cube.</p>

<p>This year I took a 3-mo Bootcamp in big data and data visualization. It had Java, Python, Scala, JavaScript, Tableau, Hadoop, Spark, AWS, and Azure. It wasn‚Äôt a programming class. I was supposed to know already these technologies to be able to do the assignments. I spent countless hours every week of my free time reading, studying, and practicing.</p>

<p>Then during the summer, I learned Power BI, GCP, and became a Certified ScrumMaster. Now that I bragged about my insatiable desire for learning, here is a hint.</p>

<p>You don‚Äôt have to learn all these technologies.</p>

<h2 id="examples">Examples</h2>

<p>I love it when tutorials start with examples. Let‚Äôs skip the setup for now, so I don‚Äôt lose you.</p>

<p>I am using the Google Maps API to find some data.</p>

<p>Just to test a response. Let‚Äôs search the <code class="language-plaintext highlighter-rouge">id</code> that corresponds to an address and store the result in a variable:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; place = gmaps.find_place(input="1600 Amphitheatre
 Parkway, Mountain View, CA", input_type="textquery")
</code></pre></div></div>

<p>Now let‚Äôs see what‚Äôs stored in this variable:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; place
{'candidates': [{'place_id': 'ChIJtYuu0V25j4ARwu5e4wwRYgE'}], 
'status': 'OK'}
</code></pre></div></div>

<p>It returns the ID that corresponds to this address.</p>

<p>Not impressed, right?</p>

<p>Let‚Äôs search for a steakhouse within 2000 meters of Google‚Äôs HQ office.</p>

<p>This is the command:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; place = gmaps.find_place(input="steakhouse", input_type="textquery", 
fields=["name", "formatted_address", "business_status", "geometry", 
"photos", "types"], location_bias="circle:2000@37.4222339,-122.0854804", 
language="en")
</code></pre></div></div>

<p>It returns the following:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; place
{'candidates': [{'business_status': 'CLOSED_TEMPORARILY', 
'formatted_address': 	'545 San Antonio Rd Suite 31, 
Mountain View, CA 94040, United States', 'geometry': 
{'location': {'lat': 37.4032079, 'lng': -122.1118804}, 
'viewport': {'northeast': 	{'lat': 37.40471237989271, 
'lng': -122.1105114701073}, 'southwest': 
{'lat': 37.40201272010727, 'lng': -12.1132111298927}}}, 
'name': "Paul Martin's America Mountain View", 'photos': 
[{'height': 4048, 'html_attributions': 
['&lt;a href="https://maps.google.com/maps/
contrib/11203600442766896285"&gt;Casey DuBose&lt;/a&gt;'], 
'photo_reference': 'CmRaAAAAit6MjPA4tMxwkAx61ZquIzBYndTl5zAcCV-
bjUPhl0dm0S3giXjEANdqAvxvxsJvCehIChMcOCPVJwxIzHAQWW9Igv01P_R-
gilhmU52I0MSRgBgWXh4g5N7wRQDPQKEhC2y0uoOD03_XFjS6o7xi0UGhTiLFI
Hq8rbIF68PRZaCoEjumKy_Q', 'width': 3036}], 'types': ['restaurant', 
'food', 'point_of_interest', 'establishment']}], 'status': 'OK'}
</code></pre></div></div>

<p>It found a place called ‚ÄúPaul Martin‚Äôs America Mountain View.‚Äù Let‚Äôs confirm and google this place. On Google maps, the result shows:</p>

<ul>
  <li>Temporarily closed</li>
  <li>545 San Antonio Rd Suite 31, Mountain View, CA 94040</li>
</ul>

<h2 id="ideas">Ideas</h2>

<p>Now let‚Äôs think of ideas and use cases. These are the API services available:</p>

<ul>
  <li>Places</li>
  <li>Directions</li>
  <li>Geocoding</li>
  <li>Geolocation</li>
  <li>Roads</li>
</ul>

<p>If you use ‚ÄúPlaces‚Äù,  you can send these types of requests:</p>

<ul>
  <li>Find Place</li>
  <li>Nearby search</li>
  <li>Text search</li>
</ul>

<p>With ‚ÄúFind Place‚Äù requests, you can use a query parameter like name, address, or phone number.</p>

<p>Think of the possibilities.</p>

<p>You could try a request like:</p>

<p>Find anything near anywhere to visualize the data on a map.</p>

<p>With ‚ÄúNearby Search‚Äù requests, you can search by keyword near a latitude and longitude.</p>

<p>I tried this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; place = gmaps.places_nearby(location=(37.4222339,-122.0854804), 
radius=5000, keyword="startup", language="en")
</code></pre></div></div>

<p>After some Python code to extract the data, the result is this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>['BootUp Ventures: Startup Ecosystem Co-Working, Office Suites &amp; Event Space', 
'Startup Capital Ventures', 'Startup Rabbit', 'Cab Startup', 
'Startup Launchpad, Inc', 'BootUpWorld', 'Startup Realty', 
'Plug and Play Tech Center', 'Mercury', 'Palo-Alto Startup House', 
'Bay Area Startups Services, Inc', 'Nuro', 'The Hive', 
'Starship Technologies', EquityBee', 'Fyde', 'HelloStartups', 
'sFoundation Inc.', 'Y Combinator', 
'Osaka Innovation Hub Silicon Valley Office']
</code></pre></div></div>

<p>These are the results for requesting anything with the keyword ‚Äústartup‚Äù within 5000 meters of Google‚Äôs HQ.</p>

<h2 id="dig-a-hole">Dig a hole</h2>

<p>I looked up ‚ÄúBootUpWorld,‚Äù and it seems like a hybrid Bootcamp/coworking space. The website has interesting directory pages with Linkedin profiles.</p>

<p>This one is cool. ‚ÄúPalo-Alto Startup House.‚Äù It looks just like the house from the Silicon Valley show. Always blue, always blue, always blue.</p>

<p>Here is another one, ‚ÄúPlug and Play Tech Center.‚Äù Mmm interesting. It has a Wikipedia page, and it says they were early investors in Google, Paypal, Dropbox, etc.</p>

<h2 id="geocoding-data">Geocoding data</h2>

<p>If you love maps as I do. You can convert an address to latitude and longitude. It‚Äôs pretty easy to do one at a time by looking up the lat/long directly into Google Maps. However, what if you want to get the data from hundreds of addresses.</p>

<p>Try this command:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; place = gmaps_geo.geocode(address="1600 
Amphitheatre Parkway, Mountain View, CA")
</code></pre></div></div>

<p>Here is what some of the result shows</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; place
...'location': {'latitude': 37.4213102, 'longitude': -122.0852443}
</code></pre></div></div>

<p>You can find data for insights or use Google Maps APIs to dig a hole and find a treasure.</p>

<p>If you found this interesting. Feel free to message me on <a href="https://www.linkedin.com/in/tomordonez/">Linkedin</a></p>
:ET