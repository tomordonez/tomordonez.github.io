I"+<p>Adding days to a date in Python using datetime and timedelta. Use Python Pandas to concatenate dates with strings.</p>

<p>I wanted to create 20 files with this syntax <code class="language-plaintext highlighter-rouge">date-blog-post-name</code>. I wrote a very extensive <a href="../d3-tutorial-data-visualization/">D3 Tutorial</a> and wanted to break it down into smaller blog posts, published sequentially 5 days apart.</p>

<p>The blog posts needed to have this naming syntax:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>YYYY-MM-DD-name-of-blog-post.md
</code></pre></div></div>

<p>I extracted the headlines <code class="language-plaintext highlighter-rouge">H2</code> of the original blog post and made an array like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; posts = ['-setup-d3-step-by-step.md', '-d3-and-asynchronous.md', 
'-d3-and-incompatible-versions.md', '-d3-load-a-csv-file-with-promises.md', 
'-d3-convert-string-to-date.md', '-d3-bind-data-to-dom.md', '-d3-drawing-svg.md', 
'-d3-creating-a-bar-chart.md', '-d3-using-scales.md', '-d3-linear-scale.md', 
'-d3-band-scale.md', '-d3-scales-in-a-bar-chart.md', '-d3-responsive-visualization.md', '-d3-arrow-functions.md', '-d3-adding-axes-to-bar-chart.md', 
'-d3-bar-chart-title-and-labels.md', '-d3-visualization-margins.md', 
'-d3-mouse-event-handler.md', '-embedding-d3-in-a-website.md']
</code></pre></div></div>

<p>How do I add the prefix dates?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2020-05-12
2020-05-17
...
</code></pre></div></div>

<p>To have files like these?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2020-05-12-setup-d3-step-by-step.md
2020-05-17-d3-and-asynchronous.md
...
</code></pre></div></div>

<h2 id="adding-days-to-a-date-in-python">Adding days to a date in Python</h2>

<p>Let’s get to it.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; datetime.date.today() + 5
</code></pre></div></div>

<p>Error:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>TypeError: unsupported operand type(s) for +: 'datetime.date' and 'int'
</code></pre></div></div>

<p>Should I then add the days to the day in the date?</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; datetime.date.today().day + 5
14
</code></pre></div></div>

<p>This can’t be right.</p>

<h2 id="adding-days-to-date-in-python-with-timedelta">Adding days to date in Python with timedelta</h2>

<p>Let’s look at the Python docs: <a href="https://docs.python.org/3/library/datetime.html">datetime</a>. Looking at <code class="language-plaintext highlighter-rouge">timedelta</code></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A timedelta object represents a duration, the difference between two dates or times.
</code></pre></div></div>

<p>You can do this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>new_date = old_date + datetime.timedelta(days=N)
</code></pre></div></div>

<p>With an example:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; today = datetime.date.today()
datetime.date(2020, 11, 10)

&gt;&gt;&gt; tomorrow = today + datetime.timedelta(days=1)
&gt;&gt;&gt; tomorrow
datetime.date(2020, 11, 11)
</code></pre></div></div>

<p>Let’s test this. What happens if I add 60 days:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; sixty_days = today + datetime.timedelta(days=60)
&gt;&gt;&gt; sixty_days
datetime.date(2021, 1, 9)
</code></pre></div></div>

<h2 id="using-isoformat">Using isoformat</h2>

<p>The syntax to create a date is:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; datetime.date(YYYY, M, D)
</code></pre></div></div>

<p>Such as:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; post_date = datetime.date(2020, 5, 12)
&gt;&gt;&gt; post_date
datetime.date(2020, 5, 12)
</code></pre></div></div>

<p>However, I want the date string, not the weird date object.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; post_date.isoformat()
'2020-05-12'
</code></pre></div></div>

<h2 id="creating-an-array-of-dates-adding-days-to-a-date">Creating an array of dates, adding days to a date</h2>

<p>Easy for loop:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; post_date
datetime.date(2020, 5, 12)

&gt;&gt;&gt; date_list = []
&gt;&gt;&gt; for post in range(1, 20):
        post_date += datetime.timedelta(days=5)
        date_list.append(post_date.isoformat())
</code></pre></div></div>

<p>Then let’s see the output</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; date_list
['2020-05-12', '2020-05-17', '2020-05-22', '2020-05-27', '2020-06-01', 
'2020-06-06', '2020-06-11', '2020-06-16', '2020-06-21', '2020-06-26', 
'2020-07-01', '2020-07-06', '2020-07-11', '2020-07-16', '2020-07-21', 
'2020-07-26', '2020-07-31', '2020-08-05', '2020-08-10']
</code></pre></div></div>

<p>Now I have a <code class="language-plaintext highlighter-rouge">date_list</code> array with dates and a <code class="language-plaintext highlighter-rouge">posts</code> array with blog post names. How do I join them?</p>

<h2 id="python-pandas-join-strings-or-concatenate-strings">Python Pandas join strings or concatenate strings</h2>

<p>Create two dataframes:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; import pandas
&gt;&gt;&gt; date_list_df = pandas.DataFrame(date_list)
&gt;&gt;&gt; posts_df = pandas.DataFrame(posts)
</code></pre></div></div>

<p>The dataframes show the data under column <code class="language-plaintext highlighter-rouge">0</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; date_list_df
	0
0   2020-05-12
1   2020-05-17
2   2020-05-22
3   2020-05-27
4   2020-06-01
5   2020-06-06
6   2020-06-11
...

&gt;&gt;&gt; posts_df                                                                                                                                                                 
	0
0	-setup-d3-step-by-step.md
1	-d3-and-asynchronous.md
2	-d3-and-incompatible-versions.md
3	-d3-load-a-csv-file-with-promises.md
4	-d3-convert-string-to-date.md
5	-d3-bind-data-to-dom.md
6	-d3-drawing-svg.md
...
</code></pre></div></div>

<p>I tried <code class="language-plaintext highlighter-rouge">join</code> but this didn’t work:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; date_list_df.join(posts_df)

ValueError: columns overlap but no suffix specified: RangeIndex(start=0, stop=1, step=1)
</code></pre></div></div>

<p>Add names to the columns:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; posts_df.columns = ['post_name']
&gt;&gt;&gt; date_list_df.columns = ['date']
</code></pre></div></div>

<p>Tried <code class="language-plaintext highlighter-rouge">join</code> again but this isn’t what I wanted to do:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; date_list_df.join(posts_df)

          date                  post_name
0   2020-05-12  -setup-d3-step-by-step.md
1   2020-05-17  -d3-and-asynchronous.md
2   2020-05-22  -d3-and-incompatible-versions.md
3   2020-05-27  -d3-load-a-csv-file-with-promises.md
4   2020-06-01  -d3-convert-string-to-date.md
5   2020-06-06  -d3-bind-data-to-dom.md
6   2020-06-11  -d3-drawing-svg.md
</code></pre></div></div>

<p>I want to concatenate the date with the post name:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; posts_names = date_list_df['date'].str.cat(posts_df['post_name'])

0    2020-05-12-setup-d3-step-by-step.md
1    2020-05-17-d3-and-asynchronous.md
2    2020-05-22-d3-and-incompatible-versions.md
3    2020-05-27-d3-load-a-csv-file-with-promises.md
4    2020-06-01-d3-convert-string-to-date.md
5    2020-06-06-d3-bind-data-to-dom.md
6    2020-06-11-d3-drawing-svg.md
</code></pre></div></div>

<p>Then create an array from the dataframe:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; posts_names_array = posts_names.array
</code></pre></div></div>

<h2 id="copying-and-creating-many-files-in-python">Copying and creating many files in Python</h2>

<p>I wanted to do the same you do on the shell:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cp source_file new_file
</code></pre></div></div>

<p>And repeat for all the posts names in <code class="language-plaintext highlighter-rouge">posts_names_array</code>.</p>

<p>Use the Python modules <code class="language-plaintext highlighter-rouge">os</code> and <code class="language-plaintext highlighter-rouge">shutil</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; import shutil

&gt;&gt;&gt; dest_dir = '_posts/'
&gt;&gt;&gt; source_post = '_posts/2020-02-02-d3-tutorial-data-visualization.md'
</code></pre></div></div>

<p>Then go through the array:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; for post in posts_names_array:
		shutil.copy2(source_post, dest_dir+post)
</code></pre></div></div>

<p>Output:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'_posts/2020-05-12-setup-d3-step-by-step.md'
'_posts/2020-05-17-d3-and-asynchronous.md'
'_posts/2020-05-22-d3-and-incompatible-versions.md'
'_posts/2020-05-27-d3-load-a-csv-file-with-promises.md'
'_posts/2020-06-01-d3-convert-string-to-date.md'
'_posts/2020-06-06-d3-bind-data-to-dom.md'
'_posts/2020-06-11-d3-drawing-svg.md'
...
</code></pre></div></div>

<p><a href="https://www.linkedin.com/in/tomordonez/"><img src="/assets/images/ama-linkedin-tomordonez.png" alt="Ask me anything on Linkedin" /></a></p>
:ET