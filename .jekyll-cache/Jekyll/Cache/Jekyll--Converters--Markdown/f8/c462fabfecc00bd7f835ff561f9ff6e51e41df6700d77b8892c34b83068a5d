I"¬Z<p>I have been thinking of buildind an app:</p>

<ul>
  <li>An app to help me study Machine Learning.</li>
  <li>An app related to mobile payments. Iâ€™ve been researching the evolution of online payments in Latin America.</li>
  <li>A stock market or finance advisor.</li>
  <li>An app about motivation.</li>
  <li>An app about research in recruiting.</li>
</ul>

<p>I learned of the Flutter framework last year. Even though I could refresh my knowledge of Java and build a plain-old Java Android app. I wanted to try something new. This is a tutorial to setup the environment to build an Android app in Linux using the Flutter framework.</p>

<p>Setting up an environment is usually what causes the most frustration and where most people drop out from moving forward. I added the output of every command for reference.</p>

<h2 id="tools">Tools</h2>

<ul>
  <li>Linux Fedora 30</li>
  <li>Nexus 5 phone</li>
</ul>

<h2 id="install-flutter">Install Flutter</h2>

<p>As seen here:
https://flutter.dev/docs/get-started/install/linux</p>

<p>Download the Flutter SDK tar file (490M).</p>

<p>I created a directory called <code class="language-plaintext highlighter-rouge">droidev</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd ~/Documents/ &amp;&amp; mkdir droidev &amp;&amp; cd droidev
</code></pre></div></div>

<p>Tar the file</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ tar xf ~/Downloads/flutter...tar.xz
</code></pre></div></div>

<p>It extracts a directory called <code class="language-plaintext highlighter-rouge">flutter</code>.</p>

<p>Update the <code class="language-plaintext highlighter-rouge">Path</code></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ vim ~/.bashrc
</code></pre></div></div>

<p>Add the Path:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export PATH="$PATH:$HOME/Documents/droidev/flutter/bin"
</code></pre></div></div>

<p>Verify:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ source ~/.bashrc
$ echo $PATH
$ which flutter
</code></pre></div></div>

<p>Predownload binaries. I did this but it didnâ€™t seem to do anything:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flutter precache
</code></pre></div></div>

<p>Disable Google Analytics crash reports:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flutter config --no-analytics
Analytics reporting disabled.
</code></pre></div></div>

<p>Check if there are dependencies missing:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flutter doctor
</code></pre></div></div>

<p>Output was:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Doctor summary (to see all details, run flutter doctor -v):
[âœ“] Flutter (Channel stable, v1.9.1+hotfix.2, on Linux, locale en_US.UTF-8)
[âœ—] Android toolchain - develop for Android devices
    âœ— Unable to locate Android SDK.
  Install Android Studio from: https://developer.android.com/studio/index.html
  On first launch it will assist you in installing the Android SDK components.
  (or visit https://flutter.dev/setup/#android-setup for detailed instructions).
  If the Android SDK has been installed to a custom location, set ANDROID_HOME to that location.
  You may also want to add it to your PATH environment variable.

[!] Android Studio (not installed)
[!] Connected device
    ! No devices available

! Doctor found issues in 3 categories.
</code></pre></div></div>

<h2 id="install-android-studio-on-linux">Install Android Studio on Linux</h2>

<p>As seen here:
https://developer.android.com/studio/install</p>

<p>If running on 64-bit:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo dnf install zlib.i686 ncurses-libs.i686 bzip2-libs.i686
</code></pre></div></div>

<p>Output:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Installing:
 zlib    i686  1.2.11-18.fc30    updates  94 k
 bzip2-libs  i686  1.0.6-29.fc30  fedora  38 k
 ncurses-libs  i686  6.1-10.20180923.fc30  fedora  308 k
Upgrading:
 glibc   x86_64  2.29-22.fc30  updates  4.0 M
 glibc-all-langpacks  x86_64  2.29-22.fc30  updates  25 M
 glibc-common  x86_64  2.29-22.fc30  updates  838 k
 glibc-devel    x86_64  2.29-22.fc30  updates  1.0 M
 glibc-headers  x86_64  2.29-22.fc30  updates  473 k
 glibc-langpack-en  x86_64  2.29-22.fc30  updates  818 k
 libgcc  x86_64  9.2.1-1.fc30  updates  91 k
Installing dependencies:
 glibc   i686  2.29-22.fc30  updates  3.9 M
 libgcc  i686  9.2.1-1.fc30  updates  98 k
</code></pre></div></div>

<p>Downloaded the <code class="language-plaintext highlighter-rouge">tar</code> file.</p>

<p>Unpack in <code class="language-plaintext highlighter-rouge">Downloads</code> and move to <code class="language-plaintext highlighter-rouge">/usr/local</code></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo mv ~/Downloads/android-studio/ /usr/local/
</code></pre></div></div>

<p>Run Installation script</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cd /usr/local/android-studio/bin/
$ ./studio.sh
</code></pre></div></div>

<p>A popup window says <code class="language-plaintext highlighter-rouge">Import Android Studio Settings From</code>.</p>

<p>I chose <code class="language-plaintext highlighter-rouge">Do not import settings</code>.</p>

<p>For <code class="language-plaintext highlighter-rouge">Data Sharing</code> I put <code class="language-plaintext highlighter-rouge">Don't send</code>.</p>

<p>It starts the <code class="language-plaintext highlighter-rouge">Setup Wizard</code>:</p>

<ul>
  <li>Standard</li>
  <li>Select UI theme: Darcula</li>
</ul>

<p>Current Settings output:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Setup Type: Standard
SDK Folder: /home/tom/Android/Sdk
Total Download Size: 515 MB
SDK Components to Download: 

Android Emulator: 205 MB
Android SDK Build-Tools 29.0.2: 39.7 MB
Android SDK Platform 29: 74.6 MB
Android SDK Platform-Tools: 8.33 MB
Android SDK Tools: 147 MB
SDK Patch Applier v4: 1.74 MB
Sources for Android 29: 37.6 MB
</code></pre></div></div>

<p>Emulator Settings said:</p>

<p><code class="language-plaintext highlighter-rouge">We have detected that your system can run the Android emulator in an accelerated performance mode...Linux-based systems support virtual machine acceleration through the KVM software package</code>.</p>

<h2 id="configure-hardware-acceleration">Configure Hardware Acceleration</h2>

<p>As seen here:
https://bytefreaks.net/android/fedora-configure-hardware-acceleration-for-the-android-emulator</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ egrep '^flags.*(vmx|svm)' /proc/cpuinfo;
$ sudo dnf group install --with-optional virtualization;
</code></pre></div></div>

<p>The output is:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Installing group/module packages:
 guestfs-browser  x86_64  0.2.3-15.fc30  fedora   1.6 M
 libguestfs-tools    noarch  1:1.40.2-4.fc30  fedora    33 k
 python3-libguestfs  x86_64  1:1.40.2-4.fc30  fedora   211 k
 virt-install  noarch  2.1.0-2.fc30   fedora    64 k
 virt-manager  noarch  2.1.0-2.fc30   fedora   582 k
 virt-top    x86_64  1.0.8-34.fc30  fedora   717 k
 virt-viewer   x86_64  8.0-1.fc30  fedora   390 k
Installing dependencies:
 gnutls-dane   x86_64  3.6.8-1.fc30   updates   25 k
 gnutls-utils  x86_64  3.6.8-1.fc30   updates  299 k
 libvirt-bash-completion  x86_64  5.1.0-9.fc30   updates   12 k
 libvirt-client   x86_64  5.1.0-9.fc30   updates  310 k
 python3-libvirt  x86_64  5.1.0-2.fc30   updates  288 k
 hexedit  x86_64  1.2.13-15.fc30   fedora    39 k
 hivex    x86_64  1.3.18-4.fc30  fedora    98 k
 libguestfs  x86_64  1:1.40.2-4.fc30  fedora   2.7 M
 libguestfs-tools-c  x86_64  1:1.40.2-4.fc30  fedora   5.5 M
 libldm   x86_64  0.2.4-4.fc30   fedora    53 k
 lsscsi   x86_64  0.30-2.fc30    fedora    63 k
 ocaml-camomile-data   x86_64  0.8.7-5.fc30   fedora   2.1 M
 perl-Sys-Guestfs    x86_64  1:1.40.2-4.fc30  fedora   316 k
 perl-Sys-Virt    x86_64  5.1.0-1.fc30   fedora   289 k
 perl-hivex  x86_64  1.3.18-4.fc30  fedora    50 k
 python3-argcomplete   noarch  1.9.5-1.fc30   fedora    57 k
 scrub    x86_64  2.5.2-14.fc30  fedora    42 k
 supermin    x86_64  5.1.20-3.fc30  fedora   446 k
 virt-manager-common   noarch  2.1.0-2.fc30   fedora   1.1 M
 zerofree    x86_64  1.1.1-3.fc30   fedora    27 k
Installing weak dependencies:
 libguestfs-xfs   x86_64  1:1.40.2-4.fc30  fedora    15 k
Installing Groups:
 Virtualization
</code></pre></div></div>

<p>Start the service and verify:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo systemctl start libvirtd;
$ sudo systemctl enable libvirtd;
$ lsmod | grep kvm
</code></pre></div></div>

<p>Output is:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kvm_intel  303104  0
kvm  741376  1 kvm_intel
irqbypass  16384  1 kvm
</code></pre></div></div>

<p>After all this for some reason my switch-windows shortcut <code class="language-plaintext highlighter-rouge">alt+tab</code> stopped working. So I ran this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ killall nautilus
</code></pre></div></div>

<h2 id="setup-an-android-device">Setup an Android device</h2>

<p>Following the docs:
https://flutter.dev/docs/get-started/install/linux</p>

<p>I had this enabled already on this phone:</p>

<ul>
  <li>Developer options</li>
  <li>USB debugging</li>
</ul>

<p>Then connected the phone and entered:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flutter devices
</code></pre></div></div>

<p>That didnâ€™t work. I got this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No devices detected.

Run 'flutter emulators' to list and start
any available device emulators.

Or, if you expected your device to be detected, 
please run "flutter doctor" to diagnose potential issues, 
or visit https://flutter.dev/setup/ for troubleshooting tips.
</code></pre></div></div>

<p>I ran this again:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flutter doctor
</code></pre></div></div>

<p>And got this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Doctor summary (to see all details, run flutter doctor -v):
[âœ“] Flutter (Channel stable, v1.9.1+hotfix.2, on Linux, locale en_US.UTF-8)
 
[!] Android toolchain - develop for Android devices (Android SDK version 29.0.2)
    âœ— Android licenses not accepted.  To resolve this, run: flutter doctor --android-licenses
[!] Android Studio (version 3.5)
    âœ— Flutter plugin not installed; this adds Flutter specific functionality.
    âœ— Dart plugin not installed; this adds Dart specific functionality.
[!] Connected device
    ! No devices available

! Doctor found issues in 3 categories.
</code></pre></div></div>

<p>Entered the suggested command:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flutter doctor --android-licenses
</code></pre></div></div>

<p>Got this and approved the 5 licenses:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Warning: File /home/tom/.android/repositories.cfg could not be loaded.          
5 of 5 SDK package licenses not accepted. 100% Computing updates...             
Review licenses that have not been accepted (y/N)?
</code></pre></div></div>

<h2 id="troubleshooting-no-devices-available">Troubleshooting <code class="language-plaintext highlighter-rouge">No devices available</code></h2>

<p>Again:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flutter doctor
</code></pre></div></div>

<p>Output:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[âœ“] Flutter (Channel stable, v1.9.1+hotfix.2, on Linux, locale en_US.UTF-8)
[âœ“] Android toolchain - develop for Android devices (Android SDK version 29.0.2)
[!] Android Studio (version 3.5)
    âœ— Flutter plugin not installed; this adds Flutter specific functionality.
    âœ— Dart plugin not installed; this adds Dart specific functionality.
[!] Connected device
    ! No devices available
</code></pre></div></div>

<p>Installed <code class="language-plaintext highlighter-rouge">libmtp</code>. As seen here:</p>

<p>https://wiki.archlinux.org/index.php/Media_Transfer_Protocol
http://libmtp.sourceforge.net/</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo dnf reinstall libmtp
$ sudo dnf install libmtp-examples
</code></pre></div></div>

<p><strong>Solution</strong></p>

<p>Ran <code class="language-plaintext highlighter-rouge">flutter devices</code> but no luck. After a few hours I saw this:</p>

<p>https://askubuntu.com/questions/417323/my-mtp-capable-device-is-not-detected-what-can-i-do-about-that</p>

<p>The main answer starts with making sure you have the right cable and not just the one for charging the device. I had the USB cable I used to charge the doorbell. Itâ€™s a small orange cable. I changed the cable to the one for the kindle. That was it.</p>

<p>Run again:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flutter devices
1 connected device:

Nexus 5 â€¢ android-arm â€¢ Android 6.0.1 (API 23)
</code></pre></div></div>

<p>Run <code class="language-plaintext highlighter-rouge">flutter doctor</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Doctor summary (to see all details, run flutter doctor -v):
[âœ“] Flutter (Channel stable, v1.9.1+hotfix.2, on Linux, locale en_US.UTF-8)
[âœ“] Android toolchain - develop for Android devices (Android SDK version 29.0.2)
[!] Android Studio (version 3.5)
    âœ— Flutter plugin not installed; this adds Flutter specific functionality.
    âœ— Dart plugin not installed; this adds Dart specific functionality.
[âœ“] Connected device (1 available)
</code></pre></div></div>

<h2 id="setup-the-android-emulator">Setup the Android Emulator</h2>

<p>As seen here:
https://flutter.dev/docs/get-started/install/linux</p>

<p>Enable VM acceleration. I did this already. See above <code class="language-plaintext highlighter-rouge">Configure Hardware Acceleration</code></p>

<p>Launch Android Studio:</p>

<ul>
  <li>Tools &gt; AVD Manager</li>
  <li>Create Virtual Device</li>
  <li>Select hardware: Nexus 5 (choose your own)</li>
</ul>

<p>Select system image. I selected <code class="language-plaintext highlighter-rouge">Q: Android 10</code> and clicked on <code class="language-plaintext highlighter-rouge">Download</code>. A pop up window says <code class="language-plaintext highlighter-rouge">Component Installer</code> (1GB).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Installing Requested Components
SDK Path: /home/tom/Android/Sdk

Packages to install: 
- Google Play Intel x86 Atom System Image (system-images;android-29;google_apis_playstore;x86)

Preparing "Install Google Play Intel x86 Atom System Image (revision: 7)".
Downloading https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-29_r07-linux.zip
"Install Google Play Intel x86 Atom System Image (revision: 7)" ready.
Installing Google Play Intel x86 Atom System Image in /home/tom/Android/Sdk/system-images/android-29/google_apis_playstore/x86
"Install Google Play Intel x86 Atom System Image (revision: 7)" complete.
"Install Google Play Intel x86 Atom System Image (revision: 7)" finished.
</code></pre></div></div>

<p>I also downloaded <code class="language-plaintext highlighter-rouge">Marshmallow x86_64 Android 6.0(Google APIs)</code>. I checked the phone and the Android version is <code class="language-plaintext highlighter-rouge">6.0.1</code> (600MB).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Packages to install: 
- Google APIs Intel x86 Atom_64 System Image (system-images;android-23;google_apis;x86_64)

Preparing "Install Google APIs Intel x86 Atom_64 System Image (revision: 31)".
Downloading https://dl.google.com/android/repository/sys-img/google_apis/x86_64-23_r31.zip
</code></pre></div></div>

<p>For future reference, this is the doc about managing <code class="language-plaintext highlighter-rouge">AVD</code> (Android Virtual Device):</p>

<p>https://developer.android.com/studio/run/managing-avds</p>

<p>Back in the <code class="language-plaintext highlighter-rouge">System Image</code> window. Make sure that <code class="language-plaintext highlighter-rouge">Q</code> is selected. The right side says:</p>

<ul>
  <li>API level: 29</li>
  <li>Android: 10.0 Google Inc</li>
  <li>System image: x86</li>
  <li>Nextâ€¦</li>
</ul>

<p>A new window says <code class="language-plaintext highlighter-rouge">Android Virtual Device</code>:</p>

<ul>
  <li>AVD Name: Nexus 5 API 29</li>
  <li>Nexus 5: 4.951080x1920 xxhdpi</li>
  <li>Q: Android 10.0 x86</li>
  <li>Startup orientation: Portrait</li>
  <li>Emulated performance: Graphics &gt; Automated (The doc says <code class="language-plaintext highlighter-rouge">Hardware -GLES 2.0</code> but there is no option for this)</li>
  <li>Device Frame: Checked <code class="language-plaintext highlighter-rouge">Enable Device Frame</code></li>
  <li>Finishâ€¦</li>
</ul>

<h2 id="run-the-emulator">Run the Emulator</h2>

<p>A new window says <code class="language-plaintext highlighter-rouge">Your Virtual Devices</code>. Click on the <code class="language-plaintext highlighter-rouge">play</code> button. You can also find this from the top menu bar <code class="language-plaintext highlighter-rouge">Tools &gt; AVD Manager</code>.</p>

<p>A phone emulator opens. It takes some time to boot up.</p>

<p>On the actual phone an application says <code class="language-plaintext highlighter-rouge">My Application</code> with a <code class="language-plaintext highlighter-rouge">Hello world</code>. I think this is a sample application I created when I first started Android Studio.</p>

<p>Closed the emulator and <code class="language-plaintext highlighter-rouge">AVD Manager</code>.</p>

<h2 id="install-the-flutter-and-dart-plugins">Install the Flutter and Dart Plugins</h2>

<p>As seen here:
https://flutter.dev/docs/get-started/editor</p>

<p>Inside Android Studio:</p>

<ul>
  <li>File &gt; Settings &gt; Plugins</li>
  <li>Find <code class="language-plaintext highlighter-rouge">Flutter</code> and install</li>
  <li>3rd party plugin data privacy: <code class="language-plaintext highlighter-rouge">Accept</code>, the other choice is Cancel</li>
  <li>The plugin you want to install requires <code class="language-plaintext highlighter-rouge">Dart</code>: Yes.</li>
</ul>

<p>Click on <code class="language-plaintext highlighter-rouge">Restart IDE</code>.</p>

<p>One last check on the terminal:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ flutter doctor

Doctor summary (to see all details, run flutter doctor -v):
[âœ“] Flutter (Channel stable, v1.9.1+hotfix.2, on Linux, locale en_US.UTF-8)
[âœ“] Android toolchain - develop for Android devices (Android SDK version 29.0.2)
[âœ“] Android Studio (version 3.5)
[âœ“] Connected device (1 available)

â€¢ No issues found!
</code></pre></div></div>

<h2 id="test-drive-flutter">Test Drive Flutter</h2>

<p>As seen here:
https://flutter.dev/docs/get-started/test-drive</p>

<ol>
  <li>Open Android Studio</li>
  <li>Start a New Flutter project</li>
  <li>Flutter application</li>
  <li>Project name: <code class="language-plaintext highlighter-rouge">firstapp</code>. You can only use lowercase and underscore</li>
  <li>Flutter SDK Path: This is where I unzipped <code class="language-plaintext highlighter-rouge">flutter</code> in <code class="language-plaintext highlighter-rouge">~/Documents/droidev/flutter</code>.</li>
  <li>Project location: <code class="language-plaintext highlighter-rouge">~/AndroidStudioProjects</code></li>
</ol>

<p>For the <code class="language-plaintext highlighter-rouge">Create project offline</code> option see this. It says <code class="language-plaintext highlighter-rouge">In offline mode, it will need to have all dependencies already available in the pub cache to succeed.</code>:
https://github.com/flutter/flutter/issues/15199</p>

<p>The next window says <code class="language-plaintext highlighter-rouge">Set the package name</code>.</p>

<p>There is an important note about selecting your domain name before releasing the app. The default says <code class="language-plaintext highlighter-rouge">example.com</code>, and the package name is renamed as <code class="language-plaintext highlighter-rouge">com.example.firstapp</code>.</p>

<p>These options are checked for <code class="language-plaintext highlighter-rouge">Platform channel language</code>:</p>

<ul>
  <li>Include Kotlin support for Android code</li>
  <li>Include Swift support for iOS code</li>
</ul>

<p>The next thing I did was changing the font of the editor. It was microscopic.</p>

<h2 id="run-the-app">Run the app</h2>

<p>Click on the <code class="language-plaintext highlighter-rouge">play</code> run button.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Launching lib/main.dart on Nexus 5 in debug mode...
Initializing gradle...
Resolving dependencies...
Running Gradle task 'assembleDebug'...
Built build/app/outputs/apk/debug/app-debug.apk.
Installing build/app/outputs/apk/app.apk...
Syncing files to device Nexus 5...
</code></pre></div></div>

<p>On the phone an app says <code class="language-plaintext highlighter-rouge">Flutter Demo Home Page</code>.</p>

<p>Click on the <code class="language-plaintext highlighter-rouge">Stop</code> button when done.</p>

<p>Next step is get a quick review of the Dart languageâ€¦
ter Demo Home Page`.</p>

<p>Click on the <code class="language-plaintext highlighter-rouge">Stop</code> button when done.</p>

<p>Next step is get a quick review of the Dart languageâ€¦</p>
:ET