I"i<p>Using arrow functions in D3 to simplify the syntax.</p>

<p>More about <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions">arrow functions on Mozilla</a>.</p>

<p>Given this example:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>elements.map(function(element) {
    return element.length;
});
</code></pre></div></div>

<p>This can be simplified to:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>elements.map((element) =&gt; {
    return element.length;
});
</code></pre></div></div>

<p>If there is only one parameter and the only statement is <code class="language-plaintext highlighter-rouge">return</code> then it can be simplified to this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>elements.map(element =&gt; element.length);
</code></pre></div></div>

<p>Follow <a href="../d3-scales-in-a-bar-chart/">D3 Scales in a Bar Chart</a> to review this code in detail.</p>

<p>This code was used to create the rectangles of the bar chart:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>svg.selectAll("rect")
   .data(dataset)
   .enter()
   .append("rect")
   .attr("x", function(d, i) {
       return xScale(i);
   })
   .attr("y", function(d) {
       return yScale(d.population);
   })
   .attr("width", xScale.bandwidth())
   .attr("height", function(d) {
       return h - padding - yScale(d.population);
   })
   .attr("fill", "teal");
</code></pre></div></div>

<p>This can be refactored using arrow functions:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>svg.selectAll("rect")
   .data(dataset)
   .enter()
   .append("rect")
   .attr("x", function(d, i) {
       return xScale(i);
   })
   .attr("y", d =&gt; yScale(d.population))
   .attr("width", xScale.bandwidth())
   .attr("height", d =&gt; h - padding - yScale(d.population))
   .attr("fill", "teal");
</code></pre></div></div>
:ET